<?php

/*
 * This file is part of the Symfony package.
 *
 * (c) Olivier Chauvel <olivier@generation-multiple.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

$vendorDir = __DIR__.'/../vendor';
require_once $vendorDir.'/symfony/src/Symfony/Component/ClassLoader/UniversalClassLoader.php';

use Symfony\Component\ClassLoader\UniversalClassLoader;
use Doctrine\Common\Annotations\AnnotationRegistry;

$loader = new UniversalClassLoader();
$loader->registerNamespaces(array(
    'Symfony'                => array(
        $vendorDir.'/symfony/src',
        $vendorDir.'/symfony/tests',
        $vendorDir.'/bundles'
    ),
    'Propel'                 => array($vendorDir.'/porpel'),
    'Doctrine'               => array($vendorDir.'/doctrine/lib'),
    'Doctrine\\Common'       => array($vendorDir.'/doctrine-common/lib'),
    'Doctrine\\DBAL'         => array($vendorDir.'/doctrine-dbal/lib'),
    'Doctrine\\ODM\\MongoDB' => array($vendorDir.'/doctrine-mongodb-odm/lib'),
    'Doctrine\\MongoDB'      => array($vendorDir.'/doctrine-mongodb/lib'),
));
$loader->registerPrefixes(array(
    'Twig_' => $vendorDir.'/twig/lib',
));

// intl
if (!function_exists('intl_get_error_code')) {
    require_once __DIR__.'/../vendor/symfony/src/Symfony/Component/Locale/Resources/stubs/functions.php';

    $loader->registerPrefixFallbacks(array(__DIR__.'/../vendor/symfony/src/Symfony/Component/Locale/Resources/stubs'));
}

$loader->register();

AnnotationRegistry::registerLoader(function($class) use ($loader) {
    $loader->loadClass($class);
    return class_exists($class, false);
});
AnnotationRegistry::registerFile(
    $vendorDir.'/doctrine/lib/Doctrine/ORM/Mapping/Driver/DoctrineAnnotations.php'
);
AnnotationRegistry::registerFile(
    $vendorDir.'/doctrine-mongodb-odm/lib/Doctrine/ODM/MongoDB/Mapping/Annotations/DoctrineAnnotations.php'
);

spl_autoload_register(function($class) {
    if (0 === strpos($class, 'Genemu\\Bundle\\FormBundle\\')) {
        $path = __DIR__.'/../'.implode('/', array_slice(explode('\\', $class), 3)).'.php';

        if (!stream_resolve_include_path($path)) {
            return false;
        }
        require_once $path;

        return true;
    }
});
