security:
    encoders:   
        Xshare\UserBundle\Entity\User: 
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1
        Symfony\Component\Security\Core\User\User: plaintext
            
        Xshare\SecurityBundle\Entity\UserForgot: 
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1    

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        users:   
            entity: { class: XshareUserBundle:User}        
        #in_memory:
        #    users:
        #        ryan:  { password: ryanpass, roles: [ 'ROLE_USER' ] }
        #        test: { password: test, roles: [ 'ROLE_USER' ] }
        #        admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }


    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        login:
            pattern:  ^/private/login$
            security: false

        secured_area:
            pattern:    ^/
            form_login:
                check_path: /private/login_check
                login_path: /private/login
                failure_path: /
                #username_parameter:    _username
            logout:
                path:   /private/logout
                target: /
            anonymous: true
            #http_basic:
            #    realm: "Secured Demo Area"
            
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: /private/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/ro/private/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }