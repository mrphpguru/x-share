<?php

namespace Xshare\PollBundle\Repository;

use Doctrine\ORM\EntityRepository;

use MakerLabs\PagerBundle\Adapter\DoctrineOrmAdapter;
use MakerLabs\PagerBundle\Adapter\ArrayAdapter;

/**
 * PollRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PollRepository extends EntityRepository
{
    
    /**
     * @author s.pasat
     * select oldest poll that not processed by user
     * @param type string $userip
     */
    public function selectUnvotedPolls($uip){
        $q = $this->getEntityManager()->createQuery(
             "SELECT p 
             FROM XsharePollBundle:Poll p 
                WHERE p.poll_id NOT IN (SELECT pr.poll_id 
                                        FROM XsharePollBundle:PollResult pr
                                        WHERE pr.user_ip = :uip )
                AND p.status = 1                        
                ORDER BY p.created_at  ASC ")
            ->setMaxResults(1)
            ->setParameter('uip', $uip);
            

        $res = $q->getOneOrNullResult();
        return $res;
    }
    
    /**
     * @author s.pasat
     * select oldest poll that not processed by user
     * @param type boolean
     */
    public function getAllPolls($checkstatus = false){
        $qb = $this->createQueryBuilder('p')
                ;
        if($checkstatus){
            $qb = $qb->where("status = 1 ");
        }
        
        return new DoctrineOrmAdapter($qb);        
    }
    
    public function deletePoll($pid){
        $query = $this->createQueryBuilder('p')
            ->delete()
            ->where('p.poll_id = :pid')
            ->setParameter('pid', $pid);

        $c = $query->getQuery()->execute();
        return $c;
    }
}